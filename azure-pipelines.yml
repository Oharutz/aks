variables:
  commitMessage: $(Build.SourceVersionMessage)
  TF_VAR_location: '$(location)'
  TF_VAR_prefix: '$(prefix)'
  TF_VAR_aks_subnet_id: '$(aks_subnet_id)'
  TF_VAR_aks_vnet_id: '$(aks_vnet_id)'
  TF_VAR_resource_group_name: '$(resource_group_name)'

trigger:
- main

pool:
  name: 'privateAksAgentPool'

jobs:
  - job: ConditionalTrigger
    condition: ne(variables['commitMessage'], '[Skip]')
    steps:
    #Print Vars
    - script: |
        echo "prefix=$(prefix)"
        echo "location=$(location)"
        echo "location=$(aks_subnet_id)"
        echo "location=$(aks_vnet_id)"
    # Install Terraform and kubectl
    - script: |
        # Update package list and install prerequisites
        sudo apt-get update && sudo apt-get install -y unzip curl apt-transport-https

        # Install Terraform
        curl -O https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
        unzip terraform_1.5.0_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform version

        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        kubectl version --client
      displayName: Install Terraform and kubectl

    #Initialize Terraform
    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/privateAksAcrJumpbox'
        backendServiceArm: 'Azure ARM'
        backendAzureRmResourceGroupName: 'basicAksRg'
        backendAzureRmStorageAccountName: 'tfstateaccount1296'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'

    #Validate Terraform
    - task: TerraformTaskV4@4
      displayName: 'Terraform Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/privateAksAcrJumpbox'


    #Plan Terraform
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'Azure ARM'
        workingDirectory: '$(System.DefaultWorkingDirectory)/privateAksAcrJumpbox'

    #Check files in current directory
    - script: ls -la
      displayName: Show Current Files
      
    #Apply Terraform
    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/privateAksAcrJumpbox'
        commandOptions: '-auto-approve'
        environmentServiceNameAzureRM: 'Azure ARM'

    #Output kubeconfig
    - script: |
        echo "Copying kubeconfig to jump box"
        echo "$(terraform output -raw kube_config_raw)" > kubeconfig
        mkdir -p ~/.kube
        mv kubeconfig ~/.kube/config

        echo "Deploying manifests to private AKS cluster"
        kubectl apply -f deployment.yaml
      displayName: "Save kubeconfig"