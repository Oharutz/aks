variables:
  commitMessage: $(Build.SourceVersionMessage)
  TF_VAR_location: 'West US'
  TF_VAR_resource_group_name: 'basicAksRg'
  TF_VAR_aks_cluster_name: 'basicAksCluster'

trigger:
- main


pool:
  name: 'azUbuntuAgentPool'

jobs:
  - job: ConditionalTrigger
    condition: ne(variables['commitMessage'], '[Skip]')
    steps:
    # Step 1: Install Terraform
    - script: |
        sudo apt-get update && sudo apt-get install -y unzip
        curl -O https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
        unzip terraform_1.5.0_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform version
      displayName: Install Terraform & Unzip
    # Step 2: Initialize Terraform
    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'Azure ARM'
        backendAzureRmResourceGroupName: 'basicAksRg'
        backendAzureRmStorageAccountName: 'tfstateaccount1296'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'tf/terraform.tfstate'

    # Step 2: Validate Terraform
    - script: terraform validate
      displayName: 'Terraform Validate'

    # Step 3: Plan Terraform
    - script: terraform plan -out=tfplan
      displayName: 'Terraform Plan'

    # Step 4: Apply Terraform
    - script: terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'

    # Step 5: Output kubeconfig (optional)
    - script: |
        echo "Kubeconfig:"
        terraform output kube_config
      displayName: 'Output Kubeconfig'